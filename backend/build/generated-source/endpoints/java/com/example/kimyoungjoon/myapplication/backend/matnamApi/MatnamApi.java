/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-11-04 at 18:05:59 UTC 
 * Modify at your own risk.
 */

package com.example.kimyoungjoon.myapplication.backend.matnamApi;

/**
 * Service definition for MatnamApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MatnamApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MatnamApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the matnamApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://swmaestro1-2.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "matnamApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MatnamApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MatnamApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addMeeting".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link AddMeeting#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord}
   * @return the request
   */
  public AddMeeting addMeeting(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord content) throws java.io.IOException {
    AddMeeting result = new AddMeeting(content);
    initialize(result);
    return result;
  }

  public class AddMeeting extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "meetings";

    /**
     * Create a request for the method "addMeeting".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link AddMeeting#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddMeeting#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord}
     * @since 1.13
     */
    protected AddMeeting(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord content) {
      super(MatnamApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddMeeting setAlt(java.lang.String alt) {
      return (AddMeeting) super.setAlt(alt);
    }

    @Override
    public AddMeeting setFields(java.lang.String fields) {
      return (AddMeeting) super.setFields(fields);
    }

    @Override
    public AddMeeting setKey(java.lang.String key) {
      return (AddMeeting) super.setKey(key);
    }

    @Override
    public AddMeeting setOauthToken(java.lang.String oauthToken) {
      return (AddMeeting) super.setOauthToken(oauthToken);
    }

    @Override
    public AddMeeting setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddMeeting) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddMeeting setQuotaUser(java.lang.String quotaUser) {
      return (AddMeeting) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddMeeting setUserIp(java.lang.String userIp) {
      return (AddMeeting) super.setUserIp(userIp);
    }

    @Override
    public AddMeeting set(String parameterName, Object value) {
      return (AddMeeting) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addPlace".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link AddPlace#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord}
   * @return the request
   */
  public AddPlace addPlace(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord content) throws java.io.IOException {
    AddPlace result = new AddPlace(content);
    initialize(result);
    return result;
  }

  public class AddPlace extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "places";

    /**
     * Create a request for the method "addPlace".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link AddPlace#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddPlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord}
     * @since 1.13
     */
    protected AddPlace(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord content) {
      super(MatnamApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddPlace setAlt(java.lang.String alt) {
      return (AddPlace) super.setAlt(alt);
    }

    @Override
    public AddPlace setFields(java.lang.String fields) {
      return (AddPlace) super.setFields(fields);
    }

    @Override
    public AddPlace setKey(java.lang.String key) {
      return (AddPlace) super.setKey(key);
    }

    @Override
    public AddPlace setOauthToken(java.lang.String oauthToken) {
      return (AddPlace) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPlace setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPlace) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPlace setQuotaUser(java.lang.String quotaUser) {
      return (AddPlace) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPlace setUserIp(java.lang.String userIp) {
      return (AddPlace) super.setUserIp(userIp);
    }

    @Override
    public AddPlace set(String parameterName, Object value) {
      return (AddPlace) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addUser".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord}
   * @return the request
   */
  public AddUser addUser(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord content) throws java.io.IOException {
    AddUser result = new AddUser(content);
    initialize(result);
    return result;
  }

  public class AddUser extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "users";

    /**
     * Create a request for the method "addUser".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord}
     * @since 1.13
     */
    protected AddUser(com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord content) {
      super(MatnamApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddUser setAlt(java.lang.String alt) {
      return (AddUser) super.setAlt(alt);
    }

    @Override
    public AddUser setFields(java.lang.String fields) {
      return (AddUser) super.setFields(fields);
    }

    @Override
    public AddUser setKey(java.lang.String key) {
      return (AddUser) super.setKey(key);
    }

    @Override
    public AddUser setOauthToken(java.lang.String oauthToken) {
      return (AddUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddUser setQuotaUser(java.lang.String quotaUser) {
      return (AddUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddUser setUserIp(java.lang.String userIp) {
      return (AddUser) super.setUserIp(userIp);
    }

    @Override
    public AddUser set(String parameterName, Object value) {
      return (AddUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteMeeting".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link DeleteMeeting#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeleteMeeting deleteMeeting(java.lang.String id) throws java.io.IOException {
    DeleteMeeting result = new DeleteMeeting(id);
    initialize(result);
    return result;
  }

  public class DeleteMeeting extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "meetings/{id}";

    /**
     * Create a request for the method "deleteMeeting".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link DeleteMeeting#execute()} method to invoke the remote
     * operation. <p> {@link DeleteMeeting#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteMeeting(java.lang.String id) {
      super(MatnamApi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteMeeting setAlt(java.lang.String alt) {
      return (DeleteMeeting) super.setAlt(alt);
    }

    @Override
    public DeleteMeeting setFields(java.lang.String fields) {
      return (DeleteMeeting) super.setFields(fields);
    }

    @Override
    public DeleteMeeting setKey(java.lang.String key) {
      return (DeleteMeeting) super.setKey(key);
    }

    @Override
    public DeleteMeeting setOauthToken(java.lang.String oauthToken) {
      return (DeleteMeeting) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteMeeting setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteMeeting) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteMeeting setQuotaUser(java.lang.String quotaUser) {
      return (DeleteMeeting) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteMeeting setUserIp(java.lang.String userIp) {
      return (DeleteMeeting) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public DeleteMeeting setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteMeeting set(String parameterName, Object value) {
      return (DeleteMeeting) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deletePlace".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link DeletePlace#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeletePlace deletePlace(java.lang.Long id) throws java.io.IOException {
    DeletePlace result = new DeletePlace(id);
    initialize(result);
    return result;
  }

  public class DeletePlace extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "places/{id}";

    /**
     * Create a request for the method "deletePlace".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link DeletePlace#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeletePlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeletePlace(java.lang.Long id) {
      super(MatnamApi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeletePlace setAlt(java.lang.String alt) {
      return (DeletePlace) super.setAlt(alt);
    }

    @Override
    public DeletePlace setFields(java.lang.String fields) {
      return (DeletePlace) super.setFields(fields);
    }

    @Override
    public DeletePlace setKey(java.lang.String key) {
      return (DeletePlace) super.setKey(key);
    }

    @Override
    public DeletePlace setOauthToken(java.lang.String oauthToken) {
      return (DeletePlace) super.setOauthToken(oauthToken);
    }

    @Override
    public DeletePlace setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeletePlace) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeletePlace setQuotaUser(java.lang.String quotaUser) {
      return (DeletePlace) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeletePlace setUserIp(java.lang.String userIp) {
      return (DeletePlace) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeletePlace setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeletePlace set(String parameterName, Object value) {
      return (DeletePlace) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteUser".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link DeleteUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeleteUser deleteUser(java.lang.String id) throws java.io.IOException {
    DeleteUser result = new DeleteUser(id);
    initialize(result);
    return result;
  }

  public class DeleteUser extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "users/{id}";

    /**
     * Create a request for the method "deleteUser".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link DeleteUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteUser(java.lang.String id) {
      super(MatnamApi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteUser setAlt(java.lang.String alt) {
      return (DeleteUser) super.setAlt(alt);
    }

    @Override
    public DeleteUser setFields(java.lang.String fields) {
      return (DeleteUser) super.setFields(fields);
    }

    @Override
    public DeleteUser setKey(java.lang.String key) {
      return (DeleteUser) super.setKey(key);
    }

    @Override
    public DeleteUser setOauthToken(java.lang.String oauthToken) {
      return (DeleteUser) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteUser setQuotaUser(java.lang.String quotaUser) {
      return (DeleteUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteUser setUserIp(java.lang.String userIp) {
      return (DeleteUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public DeleteUser setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteUser set(String parameterName, Object value) {
      return (DeleteUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMeeting".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetMeeting#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetMeeting getMeeting(java.lang.String id) throws java.io.IOException {
    GetMeeting result = new GetMeeting(id);
    initialize(result);
    return result;
  }

  public class GetMeeting extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord> {

    private static final String REST_PATH = "meetings/{id}";

    /**
     * Create a request for the method "getMeeting".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetMeeting#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetMeeting#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMeeting(java.lang.String id) {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecord.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMeeting setAlt(java.lang.String alt) {
      return (GetMeeting) super.setAlt(alt);
    }

    @Override
    public GetMeeting setFields(java.lang.String fields) {
      return (GetMeeting) super.setFields(fields);
    }

    @Override
    public GetMeeting setKey(java.lang.String key) {
      return (GetMeeting) super.setKey(key);
    }

    @Override
    public GetMeeting setOauthToken(java.lang.String oauthToken) {
      return (GetMeeting) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMeeting setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMeeting) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMeeting setQuotaUser(java.lang.String quotaUser) {
      return (GetMeeting) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMeeting setUserIp(java.lang.String userIp) {
      return (GetMeeting) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetMeeting setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetMeeting set(String parameterName, Object value) {
      return (GetMeeting) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMeetings".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetMeetings#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetMeetings getMeetings() throws java.io.IOException {
    GetMeetings result = new GetMeetings();
    initialize(result);
    return result;
  }

  public class GetMeetings extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecordCollection> {

    private static final String REST_PATH = "meetings";

    /**
     * Create a request for the method "getMeetings".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetMeetings#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetMeetings#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetMeetings() {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.MeetingRecordCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMeetings setAlt(java.lang.String alt) {
      return (GetMeetings) super.setAlt(alt);
    }

    @Override
    public GetMeetings setFields(java.lang.String fields) {
      return (GetMeetings) super.setFields(fields);
    }

    @Override
    public GetMeetings setKey(java.lang.String key) {
      return (GetMeetings) super.setKey(key);
    }

    @Override
    public GetMeetings setOauthToken(java.lang.String oauthToken) {
      return (GetMeetings) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMeetings setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMeetings) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMeetings setQuotaUser(java.lang.String quotaUser) {
      return (GetMeetings) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMeetings setUserIp(java.lang.String userIp) {
      return (GetMeetings) super.setUserIp(userIp);
    }

    @Override
    public GetMeetings set(String parameterName, Object value) {
      return (GetMeetings) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPlace".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetPlace#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetPlace getPlace(java.lang.Long id) throws java.io.IOException {
    GetPlace result = new GetPlace(id);
    initialize(result);
    return result;
  }

  public class GetPlace extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord> {

    private static final String REST_PATH = "places/{id}";

    /**
     * Create a request for the method "getPlace".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetPlace#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetPlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetPlace(java.lang.Long id) {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecord.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPlace setAlt(java.lang.String alt) {
      return (GetPlace) super.setAlt(alt);
    }

    @Override
    public GetPlace setFields(java.lang.String fields) {
      return (GetPlace) super.setFields(fields);
    }

    @Override
    public GetPlace setKey(java.lang.String key) {
      return (GetPlace) super.setKey(key);
    }

    @Override
    public GetPlace setOauthToken(java.lang.String oauthToken) {
      return (GetPlace) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPlace setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPlace) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPlace setQuotaUser(java.lang.String quotaUser) {
      return (GetPlace) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPlace setUserIp(java.lang.String userIp) {
      return (GetPlace) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetPlace setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetPlace set(String parameterName, Object value) {
      return (GetPlace) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPlaces".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetPlaces#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetPlaces getPlaces() throws java.io.IOException {
    GetPlaces result = new GetPlaces();
    initialize(result);
    return result;
  }

  public class GetPlaces extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecordCollection> {

    private static final String REST_PATH = "places";

    /**
     * Create a request for the method "getPlaces".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetPlaces#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetPlaces#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetPlaces() {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.PlaceRecordCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPlaces setAlt(java.lang.String alt) {
      return (GetPlaces) super.setAlt(alt);
    }

    @Override
    public GetPlaces setFields(java.lang.String fields) {
      return (GetPlaces) super.setFields(fields);
    }

    @Override
    public GetPlaces setKey(java.lang.String key) {
      return (GetPlaces) super.setKey(key);
    }

    @Override
    public GetPlaces setOauthToken(java.lang.String oauthToken) {
      return (GetPlaces) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPlaces setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPlaces) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPlaces setQuotaUser(java.lang.String quotaUser) {
      return (GetPlaces) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPlaces setUserIp(java.lang.String userIp) {
      return (GetPlaces) super.setUserIp(userIp);
    }

    @Override
    public GetPlaces set(String parameterName, Object value) {
      return (GetPlaces) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetUser getUser(java.lang.String id) throws java.io.IOException {
    GetUser result = new GetUser(id);
    initialize(result);
    return result;
  }

  public class GetUser extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord> {

    private static final String REST_PATH = "users/{id}";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUser(java.lang.String id) {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecord.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetUser setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUsers".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetUsers getUsers() throws java.io.IOException {
    GetUsers result = new GetUsers();
    initialize(result);
    return result;
  }

  public class GetUsers extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecordCollection> {

    private static final String REST_PATH = "users";

    /**
     * Create a request for the method "getUsers".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetUsers() {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.UserRecordCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUsers setAlt(java.lang.String alt) {
      return (GetUsers) super.setAlt(alt);
    }

    @Override
    public GetUsers setFields(java.lang.String fields) {
      return (GetUsers) super.setFields(fields);
    }

    @Override
    public GetUsers setKey(java.lang.String key) {
      return (GetUsers) super.setKey(key);
    }

    @Override
    public GetUsers setOauthToken(java.lang.String oauthToken) {
      return (GetUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUsers setQuotaUser(java.lang.String quotaUser) {
      return (GetUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUsers setUserIp(java.lang.String userIp) {
      return (GetUsers) super.setUserIp(userIp);
    }

    @Override
    public GetUsers set(String parameterName, Object value) {
      return (GetUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listDevices".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link ListDevices#execute()} method to invoke the remote operation.
   *
   * @param count
   * @return the request
   */
  public ListDevices listDevices(java.lang.Integer count) throws java.io.IOException {
    ListDevices result = new ListDevices(count);
    initialize(result);
    return result;
  }

  public class ListDevices extends MatnamApiRequest<com.example.kimyoungjoon.myapplication.backend.matnamApi.model.CollectionResponseRegistrationRecord> {

    private static final String REST_PATH = "registrationrecord/{count}";

    /**
     * Create a request for the method "listDevices".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link ListDevices#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListDevices#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param count
     * @since 1.13
     */
    protected ListDevices(java.lang.Integer count) {
      super(MatnamApi.this, "GET", REST_PATH, null, com.example.kimyoungjoon.myapplication.backend.matnamApi.model.CollectionResponseRegistrationRecord.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListDevices setAlt(java.lang.String alt) {
      return (ListDevices) super.setAlt(alt);
    }

    @Override
    public ListDevices setFields(java.lang.String fields) {
      return (ListDevices) super.setFields(fields);
    }

    @Override
    public ListDevices setKey(java.lang.String key) {
      return (ListDevices) super.setKey(key);
    }

    @Override
    public ListDevices setOauthToken(java.lang.String oauthToken) {
      return (ListDevices) super.setOauthToken(oauthToken);
    }

    @Override
    public ListDevices setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListDevices) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListDevices setQuotaUser(java.lang.String quotaUser) {
      return (ListDevices) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListDevices setUserIp(java.lang.String userIp) {
      return (ListDevices) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListDevices setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @Override
    public ListDevices set(String parameterName, Object value) {
      return (ListDevices) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @return the request
   */
  public Register register(java.lang.String regId) throws java.io.IOException {
    Register result = new Register(regId);
    initialize(result);
    return result;
  }

  public class Register extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "registerDevice/{regId}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
     * <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regId
     * @since 1.13
     */
    protected Register(java.lang.String regId) {
      super(MatnamApi.this, "POST", REST_PATH, null, Void.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public Register setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "unregister".
   *
   * This request holds the parameters needed by the matnamApi server.  After setting any optional
   * parameters, call the {@link Unregister#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @return the request
   */
  public Unregister unregister(java.lang.String regId) throws java.io.IOException {
    Unregister result = new Unregister(regId);
    initialize(result);
    return result;
  }

  public class Unregister extends MatnamApiRequest<Void> {

    private static final String REST_PATH = "unregisterDevice/{regId}";

    /**
     * Create a request for the method "unregister".
     *
     * This request holds the parameters needed by the the matnamApi server.  After setting any
     * optional parameters, call the {@link Unregister#execute()} method to invoke the remote
     * operation. <p> {@link
     * Unregister#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regId
     * @since 1.13
     */
    protected Unregister(java.lang.String regId) {
      super(MatnamApi.this, "POST", REST_PATH, null, Void.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
    }

    @Override
    public Unregister setAlt(java.lang.String alt) {
      return (Unregister) super.setAlt(alt);
    }

    @Override
    public Unregister setFields(java.lang.String fields) {
      return (Unregister) super.setFields(fields);
    }

    @Override
    public Unregister setKey(java.lang.String key) {
      return (Unregister) super.setKey(key);
    }

    @Override
    public Unregister setOauthToken(java.lang.String oauthToken) {
      return (Unregister) super.setOauthToken(oauthToken);
    }

    @Override
    public Unregister setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Unregister) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Unregister setQuotaUser(java.lang.String quotaUser) {
      return (Unregister) super.setQuotaUser(quotaUser);
    }

    @Override
    public Unregister setUserIp(java.lang.String userIp) {
      return (Unregister) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public Unregister setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @Override
    public Unregister set(String parameterName, Object value) {
      return (Unregister) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MatnamApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MatnamApi}. */
    @Override
    public MatnamApi build() {
      return new MatnamApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MatnamApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMatnamApiRequestInitializer(
        MatnamApiRequestInitializer matnamapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(matnamapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
